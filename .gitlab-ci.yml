
include:
  - local: 'ci_cd/GitLab/Common.yml'
  - local: 'ci_cd/GitLab/ConanTemplates.yml'


###############################
# Reusable templates
###############################


.conan_create_deployutils:
  stage: build
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/MdtDeployUtils 0.0.0@scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE

.conan_create_deployutils_core:
  stage: build
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/MdtDeployUtilsCore 0.0.0@scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE


.deploy_base:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never

.deploy_apps:
  extends: .deploy_base
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/MdtDeployUtils scandyna/testing --profile $CONAN_PROFILE -s build_type=Release
    - conan user --password ${CI_JOB_TOKEN} --remote scandyna ci_user
    - conan upload MdtDeployUtils/* --remote scandyna --all -c

.deploy_libs:
  extends: .deploy_base
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/MdtDeployUtilsCore scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan user --password ${CI_JOB_TOKEN} --remote scandyna ci_user
    - conan upload MdtDeployUtilsCore/* --remote scandyna --all -c


###############################
# Linux
###############################

.build_linux:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE $CONAN_EXTRA_ARGUMENTS ..
    - source activate.sh
    - cmake -G"Unix Makefiles" -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON -DBUILD_TESTS=ON -DBUILD_REAL_INSTALL_TESTS=ON -DBUILD_USE_IPO_LTO=$BUILD_USE_IPO_LTO -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" ..
    - make -j4
    - source deactivate.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build


# Here we have to get the binaries got with conan during build
.test_linux:
  stage: test
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  before_script:
    - !reference [.setup_conan, script]
    - export DISPLAY=":99"
    - /etc/init.d/xdummy-server start
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE $CONAN_EXTRA_ARGUMENTS ..
    - ctest --output-on-failure .
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - build


# Will run some executables that have been deployed in tests,
# in a image that does not have Qt installed
.system_run_test_linux:
  stage: system_test
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-cmake:latest
  before_script:
    #- !reference [.setup_conan, script]
    - export DISPLAY=":99"
    - /etc/init.d/xdummy-server start
  script:
    - cd build
    #- conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE $CONAN_EXTRA_ARGUMENTS ..
    - ctest --output-on-failure . -R System_DeployUtils_Cli_Run_QtCoreApp
    - ctest --output-on-failure . -R System_DeployUtils_Cli_Run_QtWidgetsApp -V
    - ctest --output-on-failure . -R System_DeployUtils_CMake_Run_QtCoreApp
    - ctest --output-on-failure . -R System_DeployUtils_CMake_Run_QtWidgetsApp
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build


.deploy_linux_libs:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  extends: .deploy_libs


build_linux_gcc7_x86_64_debug:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
    INSTALL_PREFIX: /opt/MdtDeployUtils
  extends: .build_linux

test_linux_gcc7_x86_64_debug:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_linux_gcc7_x86_64_debug
  extends: .test_linux
  needs: ["build_linux_gcc7_x86_64_debug"]


build_linux_gcc7_x86_64_release:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
    BUILD_USE_IPO_LTO: "ON"
    INSTALL_PREFIX: /opt/MdtDeployUtils
  extends: .build_linux

test_linux_gcc7_x86_64_release:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  dependencies:
    - build_linux_gcc7_x86_64_release
  extends: .test_linux
  needs: ["build_linux_gcc7_x86_64_release"]

system_run_test_linux_gcc7_x86_64_release:
  extends: .system_run_test_linux
  variables:
    QT_DEBUG_PLUGINS: 1
  dependencies:
    - test_linux_gcc7_x86_64_release
  needs: ["test_linux_gcc7_x86_64_release"]


build_linux_system_wide_install:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
    BUILD_USE_IPO_LTO: "ON"
    INSTALL_PREFIX: /usr
  extends: .build_linux

test_linux_system_wide_install:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  dependencies:
    - build_linux_system_wide_install
  extends: .test_linux
  needs: ["build_linux_system_wide_install"]


# With LTO ON, fails.
# See: https://gitlab.com/scandyna/mdtdeployutils/-/jobs/1371648798
build_linux_clang6.0_x86_64_release:
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    BUILD_TYPE: Release
    BUILD_USE_IPO_LTO: "OFF"
  extends: .build_linux

test_linux_clang6.0_x86_64_release:
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    BUILD_TYPE: Release
  dependencies:
    - build_linux_clang6.0_x86_64_release
  extends: .test_linux
  needs: ["build_linux_clang6.0_x86_64_release"]


build_StandaloneInstallTest_Linux_x86_64:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile linux_gcc7_x86_64 -s build_type=Release ..
    - source activate.sh
    - cmake -G"Unix Makefiles" -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG -DCMAKE_BUILD_TYPE=Release -DWARNING_AS_ERROR=ON -DBUILD_USE_IPO_LTO=ON -DCMAKE_INSTALL_PREFIX="opt/MdtDeployUtils" ..
    - make -j4
    - cmake --install . --component MdtDeployUtils_Runtime
    - source deactivate.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build/opt

StandaloneInstallTest_Linux_x86_64:
  stage: install_test
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-minimal:latest
  script:
    - cd build
    - opt/MdtDeployUtils/bin/mdtdeployutils --help
  dependencies:
    - build_StandaloneInstallTest_Linux_x86_64
  needs: ["build_StandaloneInstallTest_Linux_x86_64"]
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build


conan_deployutils_linux_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .conan_create_deployutils


conan_deployutils_core_linux_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .conan_create_deployutils_core



deploy_linux_apps:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
  extends: .deploy_apps

deploy_linux_libs_gcc7_x86_64_debug:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .deploy_linux_libs

deploy_linux_libs_gcc7_x86_64_release:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Release
  extends: .deploy_linux_libs

deploy_linux_libs_gcc7_x86_64_relwithdebinfo:
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: RelWithDebInfo
  extends: .deploy_linux_libs


###############################
# Windows
###############################

.build_windows:
  stage: build
  extends:
    - .windows_runner
  before_script:
    - !reference [.setup_conan, script]
  script:
    #- 'dir env:'
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE $CONAN_EXTRA_ARGUMENTS ..
    - ./activate
    - cmake -G"$CMAKE_GENERATOR" -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG $CMAKE_GENERATOR_EXTRA_ARGS -DCMAKE_BUILD_TYPE="$BUILD_TYPE"
            -DCMAKE_PREFIX_PATH="$BOOST_PREFIX_PATH;$QT_PREFIX_PATH"
            -DWARNING_AS_ERROR=ON -DBUILD_TESTS=ON ..
    - cmake --build . --config "$BUILD_TYPE" -j4
    - ./deactivate
  artifacts:
    expire_in: 1 day
    paths:
      - build

# Here we have to get the binaries got with conan during build
.test_windows:
  stage: test
  extends:
    - .windows_runner
  before_script:
    - !reference [.setup_conan, script]
  script:
    #- 'dir env:'
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE $CONAN_EXTRA_ARGUMENTS ..
    - ctest --output-on-failure --build-config "$BUILD_TYPE" .
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build


.conan_create_deployutils_windows:
  extends:
    - .conan_create_deployutils
    - .windows_runner
  before_script:
    - $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"

.conan_create_deployutils_core_windows:
  extends:
    - .conan_create_deployutils_core
    - .windows_runner
  before_script:
    - $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"


.deploy_windows_libs:
  extends:
    - .deploy_libs
    - .windows_runner
  before_script:
    - $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"


build_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    CMAKE_GENERATOR: "MinGW Makefiles"
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .build_windows

test_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_gcc7_x86_64_debug
  extends: .test_windows
  needs: ["build_windows_gcc7_x86_64_debug"]


#build_windows_gcc7_x86_32_debug:
  #image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Debug
    #CMAKE_GENERATOR: "MinGW Makefiles"
    #BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .build_windows

#test_windows_gcc7_x86_32_debug:
  #image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Debug
  #dependencies:
    #- build_windows_gcc7_x86_32_debug
  #extends: .test_windows


build_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
    CMAKE_GENERATOR: "Visual Studio 16 2019"
    CMAKE_GENERATOR_EXTRA_ARGS: -Ax64
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .build_windows

test_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_msvc16_x86_64_debug
  extends: .test_windows
  needs: ["build_windows_msvc16_x86_64_debug"]


# MSVC: also build and test Release config
# See: https://gitlab.com/scandyna/mdtdeployutils/-/pipelines/436234061

build_windows_msvc16_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Release
    CMAKE_GENERATOR: "Visual Studio 16 2019"
    CMAKE_GENERATOR_EXTRA_ARGS: -Ax64
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .build_windows

test_windows_msvc16_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Release
  dependencies:
    - build_windows_msvc16_x86_64_release
  extends: .test_windows
  needs: ["build_windows_msvc16_x86_64_release"]


build_StandaloneInstallTest_Windows_x86_64:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  extends:
    - .windows_runner
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile windows_gcc7_x86_64 -s build_type=Release ..
    - ./activate
    - cmake -G"MinGW Makefiles" -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG -DCMAKE_BUILD_TYPE=Release
            -DWARNING_AS_ERROR=ON -DBUILD_USE_IPO_LTO=ON
            -DCMAKE_PREFIX_PATH="C:/Libraries/boost_1_73_0;C:/Qt/5.14.2/mingw73_64"
            -DCMAKE_INSTALL_PREFIX="opt/MdtDeployUtils" ..
    - cmake --build . -j4
    - cmake --install . --component MdtDeployUtils_Runtime
    - ./deactivate
  artifacts:
    expire_in: 1 day
    paths:
      - build/opt

StandaloneInstallTest_Windows_x86_64:
  stage: install_test
  image: mcr.microsoft.com/windows/servercore:ltsc2019
  extends:
    - .windows_runner
  script:
    - cd build
    - opt/MdtDeployUtils/bin/mdtdeployutils.exe --help
  dependencies:
    - build_StandaloneInstallTest_Windows_x86_64
  needs: ["build_StandaloneInstallTest_Windows_x86_64"]
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build


conan_deployutils_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    CONAN_CMAKE_GENERATOR: "MinGW Makefiles"
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .conan_create_deployutils_windows

conan_deployutils_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .conan_create_deployutils_windows


conan_deployutils_core_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    CONAN_CMAKE_GENERATOR: "MinGW Makefiles"
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .conan_create_deployutils_core_windows

conan_deployutils_core_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .conan_create_deployutils_core_windows


deploy_windows_apps:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  extends:
    - .deploy_apps
    - .windows_runner
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  before_script:
    - $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"

deploy_windows_libs_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .deploy_windows_libs

deploy_windows_libs_gcc7_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Release
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .deploy_windows_libs

deploy_windows_libs_gcc7_x86_64_relwithdebinfo:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: RelWithDebInfo
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .deploy_windows_libs


#deploy_windows_gcc7_x86_32_debug:
  #image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Debug
    #BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_release:
  #image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Release
    #BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: RelWithDebInfo
    #BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan


deploy_windows_libs_msvc_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .deploy_windows_libs

deploy_windows_libs_msvc_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Release
    BOOST_PREFIX_PATH: "C:/Libraries/boost_1_73_0"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .deploy_windows_libs
