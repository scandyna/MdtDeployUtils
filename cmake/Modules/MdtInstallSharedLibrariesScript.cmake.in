# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
# file Copyright.txt or https://cmake.org/licensing for details.

message("HI, install...........")

message("DESTDIR: $ENV{DESTDIR}")

message("CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

message("CMAKE_PREFIX_PATH: @CMAKE_PREFIX_PATH@")


set(DESTINATION "@MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_DESTINATION@")

message("DESTINATION: ${DESTINATION}")

if(NOT DESTINATION)
  message(FATAL_ERROR "MdtInstallSharedLibrariesScript: missing DESTINATION")
endif()

# message("MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_MDT_DEPLOY_UTILS_COMMAND_FILE: @MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_MDT_DEPLOY_UTILS_COMMAND_FILE@")
file(STRINGS "@MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_MDT_DEPLOY_UTILS_COMMAND_FILE@" mdtDeployUtilsCommand)

message("mdtDeployUtilsCommand: ${mdtDeployUtilsCommand}")


# message("MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_TARGET_FILE: @MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_TARGET_FILE@")
file(STRINGS "@MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_TARGET_FILE@" targetFile)

message("targetFile: ${targetFile}")

# Prevent having //path if DESTIR is not used
set(destDir "$ENV{DESTDIR}")
if(destDir)
  get_filename_component(librariesDestination "$ENV{DESTDIR}/${CMAKE_INSTALL_PREFIX}/${DESTINATION}" ABSOLUTE)
else()
  get_filename_component(librariesDestination "${CMAKE_INSTALL_PREFIX}/${DESTINATION}" ABSOLUTE)
endif()

message("librariesDestination: ${librariesDestination}")

set(INSTALL_IS_UNIX_SYSTEM_WIDE @MDT_INSTALL_SHARED_LIBRARIES_SCRIPT_INSTALL_IS_UNIX_SYSTEM_WIDE@)
if(INSTALL_IS_UNIX_SYSTEM_WIDE)
  message("Install is Unix system wide")
  set(overwriteBehavior fail)
  set(removeRpathOptionArgument --remove-rpath)
else()
  message("Install is NOT Unix system wide")
  set(overwriteBehavior overwrite)
  set(removeRpathOptionArgument)
endif()

message("overwriteBehavior: ${overwriteBehavior}")
message("removeRpathOptionArgument: ${removeRpathOptionArgument}")

execute_process(
  COMMAND "${mdtDeployUtilsCommand}" --logger-backend cmake copy-shared-libraries-target-depends-on
            --overwrite-behavior ${overwriteBehavior}
            ${removeRpathOptionArgument}
            --search-prefix-path-list "@CMAKE_PREFIX_PATH@"
            "${targetFile}"
            "${librariesDestination}"
  RESULTS_VARIABLE mdtDeployUtilsResult
  ERROR_VARIABLE mdtDeployUtilsError
)
if( NOT (${mdtDeployUtilsResult} EQUAL 0) )
  message(FATAL_ERROR "mdt_install_shared_libraries_target_depends_on() failed: ${mdtDeployUtilsError}")
endif()
